{
    "name": "@llm-tools/embedjs",
    "version": "0.0.95",
    "description": "A NodeJS RAG framework to easily work with LLMs and custom datasets",
    "main": "dist/index.js",
    "types": "dist/index.d.ts",
    "type": "module",
    "scripts": {
        "clean": "rimraf dist/",
        "build:local": "npm run build:esm && npm run build:cjs",
        "build": "npm run clean && npm run build:esm && npm run build:cjs",
        "build:cjs": "tsc --outDir dist-cjs/ -p tsconfig.cjs.json && node scripts/move-cjs-to-dist.js && rimraf dist-cjs",
        "build:esm": "tsc --outDir dist/",
        "prepublishOnly": "npm run build",
        "tsc": "tsc --noEmit --pretty"
    },
    "repository": {
        "type": "git",
        "url": "git+https://github.com/llm-tools/embedjs.git"
    },
    "keywords": [
        "ai",
        "ml",
        "llm",
        "gpt",
        "openai",
        "anthropic",
        "claude",
        "qdrant",
        "chatgpt",
        "hugging-face",
        "ollama",
        "mistral",
        "cohere",
        "embedding",
        "embeddings",
        "openai",
        "langchain",
        "prompt",
        "rag",
        "pinecone",
        "vertex-ai",
        "mongodb",
        "large-language-model"
    ],
    "license": "Apache-2.0",
    "author": "K V Adhityan",
    "bugs": {
        "url": "https://github.com/llm-tools/embedjs/issues"
    },
    "publishConfig": {
        "access": "public"
    },
    "files": [
        "dist"
    ],
    "homepage": "https://github.com/llm-tools/embedjs#readme",
    "dependencies": {
        "@huggingface/inference": "^2.8.0",
        "@langchain/anthropic": "^0.3.0",
        "@langchain/cohere": "^0.3.0",
        "@langchain/community": "^0.3.0",
        "@langchain/core": "^0.3.1",
        "@langchain/google-vertexai": "^0.1.0",
        "@langchain/mistralai": "^0.1.0",
        "@langchain/openai": "^0.3.0",
        "axios": "^1.7.7",
        "compute-cosine-similarity": "^1.1.0",
        "confluence.js": "^1.7.4",
        "csv-parse": "^5.5.6",
        "debug": "^4.3.6",
        "html-to-text": "^9.0.5",
        "langchain": "^0.3.2",
        "md5": "^2.3.0",
        "mime": "^4.0.4",
        "office-text-extractor": "^3.0.3",
        "sitemapper": "^3.2.9",
        "stream-mime-type": "^2.0.0",
        "usetube": "^2.2.7",
        "uuid": "^10.0.0",
        "youtube-transcript": "^1.2.1"
    },
    "devDependencies": {
        "@azure/cosmos": "^4.1.1",
        "@pinecone-database/pinecone": "^2.2.2",
        "@qdrant/js-client-rest": "^1.11.0",
        "@tsconfig/recommended": "^1.0.7",
        "@types/babel__generator": "^7.6.8",
        "@types/babel__template": "^7.4.4",
        "@types/debug": "^4.1.12",
        "@types/html-to-text": "^9.0.4",
        "@types/http-cache-semantics": "^4.0.4",
        "@types/istanbul-lib-report": "^3.0.3",
        "@types/jest": "29.5.13",
        "@types/md5": "^2.3.5",
        "@types/ms": "^0.7.34",
        "@types/node": "^22.5.5",
        "@types/usetube": "^2.1.2",
        "@types/webidl-conversions": "^7.0.3",
        "@types/yargs-parser": "^21.0.3",
        "@typescript-eslint/eslint-plugin": "^8.5.0",
        "@typescript-eslint/parser": "^8.5.0",
        "chromadb": "^1.8.1",
        "cohere-ai": "^7.13.1",
        "eslint": "^9.10.0",
        "eslint-config-prettier": "^9.1.0",
        "eslint-plugin-prettier": "^5.2.1",
        "hnswlib-node": "^3.0.0",
        "ioredis": "^5.4.1",
        "jest": "29.7.0",
        "lmdb": "^3.1.1",
        "mongodb": "^6.9.0",
        "prettier": "^3.3.3",
        "rimraf": "^6.0.1",
        "ts-jest": "29.2.5",
        "typescript": "^5.6.2",
        "@lancedb/lancedb": "^0.10.0",
        "weaviate-ts-client": "^2.2.0"
    },
    "peerDependencies": {
        "@azure/cosmos": "^4.1.1",
        "@pinecone-database/pinecone": "^2.2.2",
        "@qdrant/js-client-rest": "^1.11.0",
        "chromadb": "^1.8.1",
        "cohere-ai": "^7.13.1",
        "hnswlib-node": "^3.0.0",
        "ioredis": "^5.4.1",
        "lmdb": "^3.1.1",
        "mongodb": "^6.9.0",
        "weaviate-ts-client": "^2.2.0",
        "@lancedb/lancedb": "^0.10.0"
    },
    "overrides": {
        "@pinecone-database/pinecone": "^2.2.2",
        "weaviate-ts-client": "^2.2.0",
        "hnswlib-node": "^3.0.0"
    },
    "peerDependenciesMeta": {
        "@pinecone-database/pinecone": {
            "optional": true
        },
        "@lancedb/lancedb": {
            "optional": true
        },
        "chromadb": {
            "optional": true
        },
        "lmdb": {
            "optional": true
        },
        "cohere-ai": {
            "optional": true
        },
        "hnswlib-node": {
            "optional": true
        },
        "ioredis": {
            "optional": true
        },
        "@qdrant/js-client-rest": {
            "optional": true
        },
        "weaviate-ts-client": {
            "optional": true
        },
        "mongodb": {
            "optional": true
        },
        "@azure/cosmos": {
            "optional": true
        }
    },
    "engines": {
        "node": ">= 18.0.0"
    },
    "exports": {
        ".": {
            "types": "./dist/index.d.ts",
            "import": "./dist/index.js",
            "require": "./dist/index.cjs"
        },
        "./vectorDb/lance": {
            "types": "./dist/vectorDb/lance-db.d.ts",
            "import": "./dist/vectorDb/lance-db.js",
            "require": "./dist/vectorDb/lance-db.cjs"
        },
        "./vectorDb/pinecone": {
            "types": "./dist/vectorDb/pinecone-db.d.ts",
            "import": "./dist/vectorDb/pinecone-db.js",
            "require": "./dist/vectorDb/pinecone-db.cjs"
        },
        "./vectorDb/chroma": {
            "types": "./dist/vectorDb/chroma-db.d.ts",
            "import": "./dist/vectorDb/chroma-db.js",
            "require": "./dist/vectorDb/chroma-db.cjs"
        },
        "./vectorDb/qdrant": {
            "types": "./dist/vectorDb/qdrant-db.d.ts",
            "import": "./dist/vectorDb/qdrant-db.js",
            "require": "./dist/vectorDb/qdrant-db.cjs"
        },
        "./vectorDb/hnswlib": {
            "types": "./dist/vectorDb/hnswlib-db.d.ts",
            "import": "./dist/vectorDb/hnswlib-db.js",
            "require": "./dist/vectorDb/hnswlib-db.cjs"
        },
        "./vectorDb/weaviate": {
            "types": "./dist/vectorDb/weaviate-db.d.ts",
            "import": "./dist/vectorDb/weaviate-db.js",
            "require": "./dist/vectorDb/weaviate-db.cjs"
        },
        "./vectorDb/mongodb": {
            "types": "./dist/vectorDb/mongo-db.d.ts",
            "import": "./dist/vectorDb/mongo-db.js",
            "require": "./dist/vectorDb/mongo-db.cjs"
        },
        "./vectorDb/cosmosdb": {
            "types": "./dist/vectorDb/cosmos-db.d.ts",
            "import": "./dist/vectorDb/cosmos-db.js",
            "require": "./dist/vectorDb/cosmos-db.cjs"
        },
        "./cache/lmdb": {
            "types": "./dist/cache/lmdb-cache.d.ts",
            "import": "./dist/cache/lmdb-cache.js",
            "require": "./dist/cache/lmdb-cache.cjs"
        },
        "./cache/memory": {
            "types": "./dist/cache/memory-cache.d.ts",
            "import": "./dist/cache/memory-cache.js",
            "require": "./dist/cache/memory-cache.cjs"
        },
        "./cache/redis": {
            "types": "./dist/cache/redis-cache.d.ts",
            "import": "./dist/cache/redis-cache.js",
            "require": "./dist/cache/redis-cache.cjs"
        },
        "./cache/mongo": {
            "types": "./dist/cache/mongo-cache.d.ts",
            "import": "./dist/cache/mongo-cache.js",
            "require": "./dist/cache/mongo-cache.cjs"
        },
        "./conversation/memory": {
            "types": "./dist/conversation/memory-conversations.d.ts",
            "import": "./dist/conversation/memory-conversations.js",
            "require": "./dist/conversation/memory-conversations.cjs"
        },
        "./conversation/mongo": {
            "types": "./dist/conversation/mongo-conversations.d.ts",
            "import": "./dist/conversation/mongo-conversations.js",
            "require": "./dist/conversation/mongo-conversations.cjs"
        },
        "./package.json": "./package.json"
    },
    "jest": {
        "moduleFileExtensions": [
            "js",
            "json",
            "ts"
        ],
        "rootDir": "src",
        "testRegex": ".*\\.spec\\.ts$",
        "transform": {
            "^.+\\.(t|j)s$": "ts-jest"
        },
        "collectCoverageFrom": [
            "**/*.(t|j)s"
        ],
        "coverageDirectory": "../coverage",
        "testEnvironment": "node"
    }
}
